package com.tpe.controller;

import java.util.List;

import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.tpe.domain.Student;
import com.tpe.domain.dto.StudentDTO;
import com.tpe.service.StudentService;


//localhost:8080/mvc-intro/students/hi
@Controller
@RequestMapping("/students")
public class StudentController {
	
	Logger logger=LoggerFactory.getLogger(StudentController.class);
	
	@Autowired
	private StudentService studentService;
	
	
	@GetMapping("/hi")
	public ModelAndView sayHi() {
		ModelAndView mav=new ModelAndView();
		mav.addObject("message","Hi");
		mav.addObject("messagebody","I am a student management system");
		mav.setViewName("hi");
		return mav;
	}
	
	@GetMapping("/new")
	public String sendStudenForm(@ModelAttribute("student") Student student) {
		//student.setFirstName("Bekir");
		return "studentForm";
	}
	
	@PostMapping("/saveStudent")
	public String createStudent(@Valid @ModelAttribute Student student,BindingResult bindingResult) {
		if(bindingResult.hasErrors()) {
			return "studentForm";
		}
		
		logger.info("Student save......"+student.getFirstName()+":"+student.getLastName());
		
		studentService.saveStudent(student);
		return "redirect:/students";
		
//		ModelAndView mav=new ModelAndView();
//		mav.addObject("message",student.getId()+":"+student.getFirstName()+":"+student.getLastName());
//		mav.addObject("messagebody",student.getCreateDate().toString());
//		mav.setViewName("hi");
//		return mav;
	}
	
	@GetMapping
	public ModelAndView getStudents() {
		 List<Student> list = studentService.getAllStudent();
		 ModelAndView mav=new ModelAndView();
		 mav.addObject("students",list);
		 mav.setViewName("students");
		 return mav;
	}
	
	//?id=1
	@GetMapping("/update")
	public String showFormForUpdate(@RequestParam("id") Long id,Model model) {
		Student student=studentService.findStudentById(id);
		model.addAttribute(student);
		return "studentForm";
	}
	
	@GetMapping("/delete/{id}")
	//delete/1
	public String deleteStudent(@PathVariable Long id) {
		studentService.deleteStudent(id);
		return "redirect:/students";
	}
	
	
	@GetMapping("/restservice")
	@ResponseBody
	public List<Student> getStudentWithRestService(){
		List<Student> studentList= studentService.getAllStudent();
		return studentList;
	}
	
	@GetMapping("/restservice/{id}")
	@ResponseBody
	public StudentDTO getStudentById(@PathVariable Long id) {
		Student student=studentService.findStudentById(id);
		StudentDTO studentDTO=new StudentDTO(student.getFirstName(),student.getLastName());
		return studentDTO;
	}
	@PostMapping("/restservice")
	@ResponseBody
	public Map<String,String> saveStudentWithService(@Valid @RequestBody Student student){
		studentService.saveStudent(student);

		Map<String,String> map=new HashMap<>();
		map.put("message", "Student saved successfully");
		map.put("success", "true");
		return map;
	}
	
	
	
	
	
	
	

}
